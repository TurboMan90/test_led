# Example PlatformIO Project Configuration Override
# ------------------------------------------------------------------------------
# Copy to platformio_override.ini to activate overrides
# ------------------------------------------------------------------------------
# Please visit documentation: https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp32c3dev  # define as many as you need

#----------
# SAMPLE
#----------
[env:WLED_tasmota_1M]
extends = env:esp01_1m_full  # when you want to extend the existing environment (define only updated options)
; board = esp01_1m  # uncomment when ou need different board
; platform = ${common.platform_wled_default}  # uncomment and change when you want particular platform
; platform_packages = ${common.platform_packages}
; board_build.ldscript = ${common.ldscript_1m128k}
; upload_speed = 921600 # fast upload speed (remove ';' if your board supports fast upload speed)
# Sample libraries used for various usermods. Uncomment when using particular usermod.
lib_deps = ${esp8266.lib_deps}
;  olikraus/U8g2 # @~2.33.15
;  paulstoffregen/OneWire@~2.3.8
;  adafruit/Adafruit Unified Sensor@^1.1.4
;  adafruit/DHT sensor library@^1.4.1
;  adafruit/Adafruit BME280 Library@^2.2.2
;  Wire
;  robtillaart/SHT85@~0.3.3
;  gmag11/QuickESPNow ;@ 0.6.2
;  https://github.com/blazoncek/QuickESPNow.git#optional-debug  ;; exludes debug library
;  https://github.com/kosme/arduinoFFT#develop @ 2.0.1 ;; used for USERMOD_AUDIOREACTIVE
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} ${esp8266.build_flags}
;
; *** To use the below defines/overrides, copy and paste each onto it's own line just below build_flags in the section above.
; 
; Set a release name that may be used to distinguish required binary for flashing
;   -D WLED_RELEASE_NAME=ESP32_MULTI_USREMODS
;
; disable specific features
;   -D WLED_DISABLE_OTA
;   -D WLED_DISABLE_ALEXA
;   -D WLED_DISABLE_HUESYNC
;   -D WLED_DISABLE_LOXONE
;   -D WLED_DISABLE_INFRARED
;   -D WLED_DISABLE_WEBSOCKETS
;   -D WLED_DISABLE_MQTT
;   -D WLED_DISABLE_ADALIGHT
;   -D WLED_DISABLE_2D
;   -D WLED_DISABLE_PXMAGIC
;   -D WLED_DISABLE_ESPNOW
;   -D WLED_DISABLE_BROWNOUT_DET
;
; PIN defines - uncomment and change, if needed:
;   -D LEDPIN=2
; or use this for multiple outputs
;   -D DATA_PINS=1,3
;   -D BTNPIN=0
;   -D IRPIN=4
;   -D RLYPIN=12
;   -D RLYMDE=1
;   -D RLYODRAIN=0
;   -D LED_BUILTIN=2 # GPIO of built-in LED
;
; Limit max buses
;   -D WLED_MAX_BUSSES=2
;
; Configure default WiFi
;   -D CLIENT_SSID='"MyNetwork"'
;   -D CLIENT_PASS='"Netw0rkPassw0rd"'
;
; Configure and use Ethernet
;   -D WLED_USE_ETHERNET
;   -D WLED_ETH_DEFAULT=5
; do not use pins 5, (16,) 17, 18, 19, 21, 22, 23, 25, 26, 27 for anything but ethernet
;   -D PHY_ADDR=0 -D ETH_PHY_POWER=5 -D ETH_PHY_MDC=23 -D ETH_PHY_MDIO=18
;   -D ETH_CLK_MODE=ETH_CLOCK_GPIO17_OUT
;
; NTP time configuration
;   -D WLED_NTP_ENABLED=true
;   -D WLED_TIMEZONE=2
;   -D WLED_LAT=48.86
;   -D WLED_LON=2.33
;
; Use Watchdog timer with 10s guard
;   -D WLED_WATCHDOG_TIMEOUT=10
;
; Create debug build (with remote debug)
;   -D WLED_DEBUG
;   -D WLED_DEBUG_HOST='"192.168.0.100"'
;   -D WLED_DEBUG_PORT=7868
;
; Use Autosave usermod and set it to do save after 90s
;   -D USERMOD_AUTO_SAVE
;   -D AUTOSAVE_AFTER_SEC=90
;
; Use AHT10/AHT15/AHT20 usermod
;   -D USERMOD_AHT10
;
; Use INA226 usermod
;   -D USERMOD_INA226
;
; Use 4 Line Display usermod with SPI display
;   -D USERMOD_FOUR_LINE_DISPLAY
;   -D USE_ALT_DISPlAY # mandatory
;   -DFLD_SPI_DEFAULT
;   -D FLD_TYPE=SSD1306_SPI64
;   -D FLD_PIN_CLOCKSPI=14
;   -D FLD_PIN_DATASPI=13
;   -D FLD_PIN_DC=26
;   -D FLD_PIN_CS=15
;   -D FLD_PIN_RESET=27
;
; Use Rotary encoder usermod (in conjunction with 4LD)
;   -D USERMOD_ROTARY_ENCODER_UI
;   -D ENCODER_DT_PIN=5
;   -D ENCODER_CLK_PIN=18
;   -D ENCODER_SW_PIN=19
;
; Use Dallas DS18B20 temperature sensor usermod and configure it to use GPIO13
;   -D USERMOD_DALLASTEMPERATURE
;   -D TEMPERATURE_PIN=13
;
; Use Multi Relay usermod and configure it to use 6 relays and appropriate GPIO
;   -D USERMOD_MULTI_RELAY
;   -D MULTI_RELAY_MAX_RELAYS=6
;   -D MULTI_RELAY_PINS=12,23,22,21,24,25
;
; Use PIR sensor usermod and configure it to use GPIO4 and timer of 60s
;   -D USERMOD_PIRSWITCH
;   -D PIR_SENSOR_PIN=4
;   -D PIR_SENSOR_OFF_SEC=60
;
; Use Audioreactive usermod and configure I2S microphone
;   -D USERMOD_AUDIOREACTIVE
;   -D UM_AUDIOREACTIVE_USE_NEW_FFT
;   -D AUDIOPIN=-1
;   -D DMTYPE=1     # 0-analog/disabled, 1-I2S generic, 2-ES7243, 3-SPH0645, 4-I2S+mclk, 5-I2S PDM
;   -D I2S_SDPIN=36
;   -D I2S_WSPIN=23
;   -D I2S_CKPIN=19
;
; Use PWM fan usermod
;   -D USERMOD_PWM_FAN
;   -D TACHO_PIN=33
;   -D PWM_PIN=32
;
; Use built-in or custom LED as a status indicator (assumes LED is connected to GPIO16)
;   -D STATUSLED=16
;   
; set the name of the module - make sure there is a quote-backslash-quote before the name and a backslash-quote-quote after the name
;   -D SERVERNAME="\"WLED\""
;   
; set the number of LEDs
;   -D DEFAULT_LED_COUNT=30
; or this for multiple outputs
;   -D PIXEL_COUNTS=30,30
;   
; set milliampere limit when using ESP pin to power leds
;   -D ABL_MILLIAMPS_DEFAULT=850
;
; enable IR by setting remote type
;   -D IRTYPE=0 ;0 Remote disabled | 1 24-key RGB | 2 24-key with CT | 3 40-key blue | 4 40-key RGB | 5 21-key RGB | 6 6-key black | 7 9-key red | 8 JSON remote
;   
; set default color order of your led strip
;   -D DEFAULT_LED_COLOR_ORDER=COL_ORDER_GRB
;
; use PSRAM on classic ESP32 rev.1 (rev.3 or above has no issues)
;   -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue
;
; configure I2C and SPI interface (for various hardware)
;   -D I2CSDAPIN=33 # initialise interface
;   -D I2CSCLPIN=35 # initialise interface
;   -D HW_PIN_SCL=35
;   -D HW_PIN_SDA=33
;   -D HW_PIN_CLOCKSPI=7
;   -D HW_PIN_DATASPI=11
;   -D HW_PIN_MISOSPI=9



# ------------------------------------------------------------------------------
# PRE-CONFIGURED DEVELOPMENT BOARDS AND CONTROLLERS
# ------------------------------------------------------------------------------

[env:esp32c3dev]
extends = esp32c3
platform = ${esp32c3.platform}
platform_packages = ${esp32c3.platform_packages}
framework = arduino
board = esp32-c3-devkitm-1
board_build.partitions = ${esp32.default_partitions}
build_flags = ${common.build_flags} ${esp32c3.build_flags} -D WLED_RELEASE_NAME=ESP32-C3
  -D USERMOD_DALLASTEMPERATURE
  -D TEMPERATURE_PIN=4
  -D WLED_WATCHDOG_TIMEOUT=0
  -DLOLIN_WIFI_FIX ; seems to work much better with this
  -DARDUINO_USB_CDC_ON_BOOT=1 ;; for virtual CDC USB
  ;-DARDUINO_USB_CDC_ON_BOOT=0   ;; for serial-to-USB chip
upload_speed = 460800
build_unflags = ${common.build_unflags}
lib_deps = ${esp32c3.lib_deps}
  dallas
  paulstoffregen/OneWire@^2.3.8

